import axios from "axios";
import { Fragment, useState } from "react";
import getTitles from "../../helpers/dataCenter";
import Head from "next/head";
import CategoryPageLayout from "../../components/layout/categorypagelayout/CategoryPageLayout";
import CategoryPageMain from "../../components/categoryPage/CategoryPageMain";
export default function Category(props) {
  const categoryData = props.data.results;
  const category = props.category ? props.category : [];

  const [showSideNavDesktop, setshowSideNavDesktop] = useState(false);

  return (
    <Fragment>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div onClickCapture={() => setshowSideNavDesktop(false)}>
        <CategoryPageLayout
          showSideNavDesktop={showSideNavDesktop}
          setshowSideNavDesktop={setshowSideNavDesktop}
          category={category}
        >
          <CategoryPageMain categoryData={categoryData} category={category} />
        </CategoryPageLayout>
      </div>
    </Fragment>
  );
}

export async function getStaticProps(context) {
  const category = context.params.category;
  const baseUrl = `https://api.nytimes.com/svc/topstories/v2/${category}.json?api-key=EhgvtA3WE0sRHZeL6sQ8LPFZtn2CtGFz`;
  let rr;
  setTimeout(async () => {
    rr = await axios.get(baseUrl);
  }, 3000);
  return {
    props: {
      data: rr ? rr.data : [],
      category: category,
    },
    revalidate: 2,
  };
}
export async function getStaticPaths() {
  const sections = await getTitles();
  const paths = sections.map((section) => ({ params: { category: section } }));
  return {
    paths: paths,
    fallback: "blocking",
  };
}
